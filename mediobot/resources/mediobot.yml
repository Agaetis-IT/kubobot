kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: picturestorage-storageclass
provisioner: kubernetes.io/azure-file
mountOptions:
  - dir_mode=0777
  - file_mode=0777
  - uid=1000
  - gid=1000
parameters:
  skuName: Standard_LRS
allowVolumeExpansion: true
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: picturestorage-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: picturestorage-storageclass
  resources:
    requests:
      storage: 2Gi
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mediobot-deployment
  labels: 
    app: mediobot
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mediobot
  template:
    metadata:
      labels:
        app: mediobot
    spec:
      containers:
      - name: mediobot
        image: agaetisit/mediobot:latest
        env:
        - name: FLICKR_API_KEY
          valueFrom:
            secretKeyRef:
              name: flickr-api
              key: flickr.api.key
        - name: FLICKR_API_SECRET
          valueFrom:
            secretKeyRef:
              name: flickr-api
              key: flickr.api.secret
        - name: spring.data.mongodb.username
          value: mediobot-admin
        - name: spring.data.mongodb.password
          valueFrom:
            secretKeyRef:
              name: mongo
              key: mongodb-password
        resources:
          limits:
            memory: 512M
          requests:
            memory: 512M
        volumeMounts:
          - mountPath: "/pictures"
            name: picturestorage
      volumes:
        - name: picturestorage
          persistentVolumeClaim:
            claimName: picturestorage-pvc
---

apiVersion: v1
kind: Service
metadata:
  name: mediobot-service
spec:
  type: LoadBalancer
  selector:
    app: mediobot
  ports:
  - port: 80
    targetPort: 8080
---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: mediobot-ingress
  annotations:
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"
    certmanager.k8s.io/issuer: mediobot-issuer-prod
spec:
  tls:
  - hosts:
    - mediobot.monobot.fr
    secretName: mediobot-certificate-prod
  rules:
  - host: mediobot.monobot.fr
    http:
      paths:
      - path: /
        backend:
          serviceName: mediobot-service
          servicePort: 80
---

apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: retrieve-media-pictures-job
spec:
  schedule: "0 2 * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: retrieve-media-pictures-job
        spec:
          containers:
            - name: retrieve-media-pictures-job
              image: buildpack-deps:curl
              args:
              - /bin/sh
              - -ec
              - curl https://mediobot.monobot.fr/pictures
          restartPolicy: Never